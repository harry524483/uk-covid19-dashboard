{"version":3,"sources":["components/Chart.tsx"],"names":["ChartJS","defaults","scale","gridLines","drawOnChartArea","Chart","props","convasElement","useRef","useEffect","type","data","options","chartInstance","current","destroy","style","background","backgroundColor","marginBottom","ref"],"mappings":"wHAAA,6CAGAA,IAAQC,SAASC,MAAMC,UAAUC,iBAAkB,EAqCpCC,UA5BD,SAACC,GACb,IAAMC,EAAgBC,iBAAO,MAe7B,OAbAC,qBAAU,WAAO,IACPC,EAAwBJ,EAAxBI,KAAMC,EAAkBL,EAAlBK,KAAMC,EAAYN,EAAZM,QAEdC,EAAgB,IAAIb,IAAQO,EAAcO,QAAS,CACvDJ,OACAC,OACAC,YAEF,OAAO,WACLC,EAAcE,aAEf,CAACT,IAGF,yBACEU,MAAO,CACLC,WAAYX,EAAMY,gBAClBC,aAAc,SAGhB,4BAAQC,IAAKb","file":"static/js/4.c2351daa.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport ChartJS from 'chart.js';\n\nChartJS.defaults.scale.gridLines.drawOnChartArea = false;\n\ntype ChartProps = {\n  type: string;\n  data: any;\n  options: any;\n  backgroundColor: string;\n};\n\nconst Chart = (props: ChartProps) => {\n  const convasElement = useRef(null);\n\n  useEffect(() => {\n    const { type, data, options } = props;\n\n    const chartInstance = new ChartJS(convasElement.current, {\n      type,\n      data,\n      options,\n    });\n    return () => {\n      chartInstance.destroy();\n    };\n  }, [props]);\n\n  return (\n    <div\n      style={{\n        background: props.backgroundColor,\n        marginBottom: '15px',\n      }}\n    >\n      <canvas ref={convasElement} />\n    </div>\n  );\n};\n\nexport default Chart;\n"],"sourceRoot":""}