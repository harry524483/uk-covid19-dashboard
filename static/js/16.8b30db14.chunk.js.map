{"version":3,"sources":["components/NewCasesChart.tsx","utils/dateRangeFilter.ts"],"names":["Chart","lazy","NewCasesChart","dateRange","newCases","filteredNewCases","dateRangeFilter","chartProps","type","data","labels","map","date","moment","format","datasets","label","cases","backgroundColor","options","responsive","legend","display","title","text","fontColor","scales","xAxes","ticks","beginAtZero","precision","yAxes","fallback","currentDate","DateRange","Beginning","OneMonth","oneMonthOldDate","subtract","filter","isBetween","undefined","TwoWeeks","twoWeeksOldDate"],"mappings":"yHAAA,oDAMMA,EAAQC,gBAAK,kBAAM,sDAgEVC,UAzDO,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,SAC5BC,EAAmBC,YAAgBF,EAAUD,GAM7CI,EAAa,CACjBC,KAAM,MACNC,KAAM,CACJC,OARWL,EAAiBM,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAClCC,IAAOD,GAAME,OAAO,aAQlBC,SAAU,CACR,CACEP,KAAM,MACNQ,MAAO,QACPP,KAVMJ,EAAiBM,KAAI,qBAAGM,SAW9BC,gBAAiB,aAIvBC,QAAS,CACPC,YAAY,EACZC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CACLD,SAAS,EACTE,KAAM,8BACNC,UAAW,QAEbC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLH,UAAW,OACXI,aAAa,EACbC,UAAW,KAIjBC,MAAO,CACL,CACEH,MAAO,CACLH,UAAW,OACXI,aAAa,EACbC,UAAW,QAOvB,OACE,kBAAC,WAAD,CAAUE,SAAU,+BAClB,kBAAChC,EAAUO,M,gCCjEjB,6BAiCeD,IA7BS,SACtBG,EACAN,GAEA,IAAM8B,EAAcpB,MAASC,OAAO,cAEpC,GAAIX,IAAc+B,IAAUC,UAC1B,OAAO1B,EAGT,GAAIN,IAAc+B,IAAUE,SAAU,CACpC,IAAMC,EAAkBxB,MAASyB,SAAS,EAAG,UAAUxB,OAAO,cAE9D,OAAOL,EAAK8B,QAAO,gBAAG3B,EAAH,EAAGA,KAAH,OACjBC,IAAOD,GAAM4B,UAAUH,EAAiBJ,OAAaQ,EAAW,SAIpE,GAAItC,IAAc+B,IAAUQ,SAAU,CACpC,IAAMC,EAAkB9B,MAASyB,SAAS,EAAG,SAASxB,OAAO,cAE7D,OAAOL,EAAK8B,QAAO,gBAAG3B,EAAH,EAAGA,KAAH,OACjBC,IAAOD,GAAM4B,UAAUG,EAAiBV,OAAaQ,EAAW,SAIpE,OAAOhC","file":"static/js/16.8b30db14.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\nimport moment from 'moment';\n\nimport DateRange from '../constants/DateRange';\nimport dateRangeFilter from '../utils/dateRangeFilter';\n\nconst Chart = lazy(() => import('./Chart'));\n\ntype NewCasesChartProps = {\n  newCases: Array<{ date: string; cases: number }>;\n  dateRange: DateRange;\n};\n\nconst NewCasesChart = ({ dateRange, newCases }: NewCasesChartProps) => {\n  const filteredNewCases = dateRangeFilter(newCases, dateRange);\n  const labels = filteredNewCases.map(({ date }) =>\n    moment(date).format('DD MMM')\n  );\n  const cases = filteredNewCases.map(({ cases }) => cases);\n\n  const chartProps = {\n    type: 'bar',\n    data: {\n      labels,\n      datasets: [\n        {\n          type: 'bar',\n          label: 'Cases',\n          data: cases,\n          backgroundColor: '#F7DC6F', //#F9E79F\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n      legend: { display: false },\n      title: {\n        display: true,\n        text: 'Daily confirmed cases in UK',\n        fontColor: '#CCC',\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              fontColor: '#CCC',\n              beginAtZero: true,\n              precision: 0,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            ticks: {\n              fontColor: '#CCC',\n              beginAtZero: true,\n              precision: 0,\n            },\n          },\n        ],\n      },\n    },\n  };\n  return (\n    <Suspense fallback={<div />}>\n      <Chart {...chartProps} />\n    </Suspense>\n  );\n};\n\nexport default NewCasesChart;\n","import moment from 'moment';\n\nimport DateRange from '../constants/DateRange';\n\nconst dateRangeFilter = (\n  data: Array<{ date: string }>,\n  dateRange: DateRange\n): Array<any> => {\n  const currentDate = moment().format('YYYY-MM-DD');\n\n  if (dateRange === DateRange.Beginning) {\n    return data;\n  }\n\n  if (dateRange === DateRange.OneMonth) {\n    const oneMonthOldDate = moment().subtract(1, 'months').format('YYYY-MM-DD');\n\n    return data.filter(({ date }) =>\n      moment(date).isBetween(oneMonthOldDate, currentDate, undefined, '[]')\n    );\n  }\n\n  if (dateRange === DateRange.TwoWeeks) {\n    const twoWeeksOldDate = moment().subtract(2, 'weeks').format('YYYY-MM-DD');\n\n    return data.filter(({ date }) =>\n      moment(date).isBetween(twoWeeksOldDate, currentDate, undefined, '[]')\n    );\n  }\n\n  return data;\n};\n\nexport default dateRangeFilter;\n"],"sourceRoot":""}