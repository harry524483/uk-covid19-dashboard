{"version":3,"sources":["utils/formatDate.ts","components/Stats.tsx"],"names":["formatDate","date","moment","format","Stats","overview","lastUpdatedAt","statsInfo","name","colorClass","value","totalCases","dailyCases","dailyDeaths","totalDeaths","props","useSprings","length","map","from","trail","useTrail","transform","opacity","config","mass","tension","friction","p","style","className","index","key","div","interpolate","val","formatNumber","Math","floor"],"mappings":"uLAIeA,EAFI,SAACC,GAAD,OAAkBC,IAAOD,GAAME,OAAO,uBCuE1CC,UAnED,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACnBC,EAAY,CAChB,CACEC,KAAM,cACNC,WAAY,aACZC,MAAOL,EAASM,YAElB,CACEH,KAAM,cACNC,WAAY,eACZC,MAAOL,EAASO,YAElB,CACEJ,KAAM,eACNC,WAAY,YACZC,MAAOL,EAASQ,aAElB,CACEL,KAAM,eACNC,WAAY,eACZC,MAAOL,EAASS,cAIdC,EAAQC,YACZT,EAAUU,OACVV,EAAUW,KAAI,kBAAkC,CAC9CC,KAAM,CAAET,MAAO,GACfA,MAFY,EAAGA,MAGfD,WAHY,EAAUA,WAItBD,KAJY,EAAsBA,UAQhCY,EAAQC,YAAS,EAAG,CACxBF,KAAM,CAAEG,UAAW,0BAA2BC,QAAS,GACvDD,UAAW,yBACXC,QAAS,EACTC,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAMC,SAAU,OAG9C,OACE,oCACE,kBAAC,IAASC,EAAV,CAAYC,MAAOT,EAAM,IAAzB,mBACmBpB,EAAWM,IAE9B,yBAAKwB,UAAU,mBACZf,EAAMG,KAAI,WAA8Ba,GAA9B,IAAGrB,EAAH,EAAGA,MAAOD,EAAV,EAAUA,WAAYD,EAAtB,EAAsBA,KAAtB,OACT,yBACEsB,UAAS,+BAA0BrB,EAAWC,OAC9CsB,IAAKD,GAEL,kBAAC,IAASH,EAAV,CAAYE,UAAU,cAAcD,MAAOT,EAAMW,EAAQ,IACtDvB,EAAKE,OAER,kBAAC,IAASuB,IAAV,CAAcH,UAAU,cAAcD,MAAOT,EAAMW,EAAQ,IACxDrB,EAAMwB,aAAY,SAACC,GAAD,OACjBC,YAAaC,KAAKC,MAAMH","file":"static/js/24.8e748d3e.chunk.js","sourcesContent":["import moment from 'moment';\n\nconst formatDate = (date: string) => moment(date).format('Do MMM YY HH:mm:ss');\n\nexport default formatDate;\n","import React from 'react';\nimport { animated, useSprings, useTrail } from 'react-spring';\n\nimport formatNumber from '../utils/formatNumber';\nimport formatDate from '../utils/formatDate';\n\nconst Stats = ({ overview, lastUpdatedAt }) => {\n  const statsInfo = [\n    {\n      name: 'Total Cases',\n      colorClass: 'color-blue',\n      value: overview.totalCases,\n    },\n    {\n      name: 'Daily Cases',\n      colorClass: 'color-purple',\n      value: overview.dailyCases,\n    },\n    {\n      name: 'Daily Deaths',\n      colorClass: 'color-red',\n      value: overview.dailyDeaths,\n    },\n    {\n      name: 'Total Deaths',\n      colorClass: 'color-orange',\n      value: overview.totalDeaths,\n    },\n  ];\n\n  const props = useSprings(\n    statsInfo.length,\n    statsInfo.map(({ value, colorClass, name }) => ({\n      from: { value: 0 },\n      value,\n      colorClass,\n      name,\n    }))\n  ) as any;\n\n  const trail = useTrail(5, {\n    from: { transform: 'translate3d(0, 30px, 0)', opacity: 0 },\n    transform: 'translate3d(0, 0px, 0)',\n    opacity: 1,\n    config: { mass: 1, tension: 2000, friction: 200 },\n  });\n\n  return (\n    <>\n      <animated.p style={trail[0]}>\n        Last updated on {formatDate(lastUpdatedAt)}\n      </animated.p>\n      <div className=\"stats-container\">\n        {props.map(({ value, colorClass, name }, index: number) => (\n          <div\n            className={`stats-container-item ${colorClass.value}`}\n            key={index}\n          >\n            <animated.p className=\"stats-label\" style={trail[index + 1]}>\n              {name.value}\n            </animated.p>\n            <animated.div className=\"stats-value\" style={trail[index + 1]}>\n              {value.interpolate((val: number) =>\n                formatNumber(Math.floor(val))\n              )}\n            </animated.div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Stats;\n"],"sourceRoot":""}